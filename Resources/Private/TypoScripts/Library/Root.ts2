/**
 * Root TypoScript template for the Neos Coffee Roastery site
 */
page = Page {
	head {
		stylesheets.site = TYPO3.TypoScript:Template {
			templatePath = 'resource://DevDays.NeosWorkshop/Private/Templates/Page/Default.html'
			sectionName = 'stylesheets'
		}

		javascripts.site = TYPO3.TypoScript:Template {
			templatePath = 'resource://DevDays.NeosWorkshop/Private/Templates/Page/Default.html'
			sectionName = 'headScripts'
		}
	}

	body {
		templatePath = 'resource://DevDays.NeosWorkshop/Private/Templates/Page/Default.html'
		sectionName = 'body'
		parts {
			menu = Menu {

				# this line is not really needed, it's just needed
				# if you want to completely override the menu rendering.
				#
				# In our case, we just copied the default Menu HTML markup.
				templatePath = 'resource://DevDays.NeosWorkshop/Private/Templates/TypoScriptObjects/Menu.html'


				attributes.class = 'nav navbar-nav'

				# we want to see the same menu everywhere, and
				# not the childNodes
				entryLevel = 1

				current.attributes.class = 'active'
			}
			breadcrumb = Breadcrumb
		}
		// These are your content areas, you can define as many as you want, just name them and the nodePath.
		content {
			// The default content section
			main = PrimaryContent {
				nodePath = 'main'
			}
		}

		homepage = ${site}
		homepageTitle = ${q(site).property('title')}
		headerImage = ${q(node).property('headerImage')}

		javascripts.site = TYPO3.TypoScript:Template {
			templatePath = 'resource://DevDays.NeosWorkshop/Private/Templates/Page/Default.html'
			sectionName = 'bodyScripts'
		}
	}
}











prototype(DevDays.NeosWorkshop:Section) {
	content = TYPO3.Neos:ContentCollection {
		nodePath = 'content'
	}
}









prototype(TYPO3.Neos.NodeTypes:MultiColumn) {
	attributes.class = 'row'

	# this makes a variable called "multiColumnIteration"
	# available to nested TypoScript objects; and this is
	# used INSIDE MultiColumnItem
	columns.iterationName = 'multiColumnIteration'
}


prototype(TYPO3.Neos.NodeTypes:MultiColumnItem) {
	# "node" is a SINGLE COLUMN, and its parent is
	# (by convention) the MultiColumn itself.
	attributes.class = ${'col-sm-' + String.split(q(node).parent().property('layout'), '-')[multiColumnIteration.index]}
}
